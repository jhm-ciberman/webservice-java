
package com.shipping.server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ShippingWebService", targetNamespace = "http://server.shipping.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ShippingWebService {


    /**
     * 
     * @param id
     * @return
     *     returns com.shipping.server.Package
     */
    @WebMethod
    @WebResult(name = "Package", targetNamespace = "")
    @RequestWrapper(localName = "showPackage", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.ShowPackage")
    @ResponseWrapper(localName = "showPackageResponse", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.ShowPackageResponse")
    public Package showPackage(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @param streetName
     * @param phone
     * @param streetNumber
     * @param surname
     * @param name
     * @param dni
     * @return
     *     returns com.shipping.server.Customer
     */
    @WebMethod
    @WebResult(name = "Customer", targetNamespace = "")
    @RequestWrapper(localName = "storeCustomer", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.StoreCustomer")
    @ResponseWrapper(localName = "storeCustomerResponse", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.StoreCustomerResponse")
    public Customer storeCustomer(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "surname", targetNamespace = "")
        String surname,
        @WebParam(name = "phone", targetNamespace = "")
        String phone,
        @WebParam(name = "dni", targetNamespace = "")
        String dni,
        @WebParam(name = "streetName", targetNamespace = "")
        String streetName,
        @WebParam(name = "streetNumber", targetNamespace = "")
        String streetNumber);

    /**
     * 
     * @param streetName
     * @param phone
     * @param streetNumber
     * @param surname
     * @param name
     * @param id
     * @param dni
     * @return
     *     returns com.shipping.server.Customer
     */
    @WebMethod
    @WebResult(name = "Customer", targetNamespace = "")
    @RequestWrapper(localName = "updateCustomer", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.UpdateCustomer")
    @ResponseWrapper(localName = "updateCustomerResponse", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.UpdateCustomerResponse")
    public Customer updateCustomer(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "surname", targetNamespace = "")
        String surname,
        @WebParam(name = "phone", targetNamespace = "")
        String phone,
        @WebParam(name = "dni", targetNamespace = "")
        String dni,
        @WebParam(name = "streetName", targetNamespace = "")
        String streetName,
        @WebParam(name = "streetNumber", targetNamespace = "")
        String streetNumber);

    /**
     * 
     * @param streetName
     * @param shippingCost
     * @param depth
     * @param width
     * @param weight
     * @param stretNumber
     * @param height
     * @return
     *     returns com.shipping.server.Package
     */
    @WebMethod
    @WebResult(name = "Package", targetNamespace = "")
    @RequestWrapper(localName = "storePackage", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.StorePackage")
    @ResponseWrapper(localName = "storePackageResponse", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.StorePackageResponse")
    public Package storePackage(
        @WebParam(name = "shippingCost", targetNamespace = "")
        int shippingCost,
        @WebParam(name = "weight", targetNamespace = "")
        int weight,
        @WebParam(name = "streetName", targetNamespace = "")
        String streetName,
        @WebParam(name = "stretNumber", targetNamespace = "")
        String stretNumber,
        @WebParam(name = "width", targetNamespace = "")
        int width,
        @WebParam(name = "height", targetNamespace = "")
        int height,
        @WebParam(name = "depth", targetNamespace = "")
        int depth);

    /**
     * 
     * @param id
     * @return
     *     returns com.shipping.server.Customer
     */
    @WebMethod
    @WebResult(name = "Customer", targetNamespace = "")
    @RequestWrapper(localName = "showCustomer", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.ShowCustomer")
    @ResponseWrapper(localName = "showCustomerResponse", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.ShowCustomerResponse")
    public Customer showCustomer(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @param streetName
     * @param shippingCost
     * @param depth
     * @param width
     * @param weight
     * @param id
     * @param stretNumber
     * @param height
     * @return
     *     returns com.shipping.server.Package
     */
    @WebMethod
    @WebResult(name = "Package", targetNamespace = "")
    @RequestWrapper(localName = "updatePackage", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.UpdatePackage")
    @ResponseWrapper(localName = "updatePackageResponse", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.UpdatePackageResponse")
    public Package updatePackage(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "shippingCost", targetNamespace = "")
        int shippingCost,
        @WebParam(name = "weight", targetNamespace = "")
        int weight,
        @WebParam(name = "streetName", targetNamespace = "")
        String streetName,
        @WebParam(name = "stretNumber", targetNamespace = "")
        String stretNumber,
        @WebParam(name = "width", targetNamespace = "")
        int width,
        @WebParam(name = "height", targetNamespace = "")
        int height,
        @WebParam(name = "depth", targetNamespace = "")
        int depth);

    /**
     * 
     * @return
     *     returns java.util.List<com.shipping.server.Customer>
     */
    @WebMethod
    @WebResult(name = "Customer", targetNamespace = "")
    @RequestWrapper(localName = "indexCustomers", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.IndexCustomers")
    @ResponseWrapper(localName = "indexCustomersResponse", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.IndexCustomersResponse")
    public List<Customer> indexCustomers();

    /**
     * 
     * @return
     *     returns java.util.List<com.shipping.server.Package>
     */
    @WebMethod
    @WebResult(name = "Package", targetNamespace = "")
    @RequestWrapper(localName = "indexPackages", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.IndexPackages")
    @ResponseWrapper(localName = "indexPackagesResponse", targetNamespace = "http://server.shipping.com/", className = "com.shipping.server.IndexPackagesResponse")
    public List<Package> indexPackages();

}
